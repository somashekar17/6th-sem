package com.example.tts

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.speech.tts.TextToSpeech
import android.util.Log
import java.util.*
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity(), TextToSpeech.OnInitListener{
    private var textToSpeech: TextToSpeech? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        textToSpeechButton.isEnabled = false
        textToSpeech = TextToSpeech(this,this)
        textToSpeechButton.setOnClickListener{ convertToSpeech() }

    }

    override fun onInit(status: Int) {   //Called to signal the completion of the TextToSpeech engine initialization. The status can be SUCCESS or ERROR
        if(status == TextToSpeech.SUCCESS){
            val result = textToSpeech?.setLanguage(Locale.US)
            if(result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED){
                Log.e("TTS", "Language specified NOT SUPPORTED")
            }
            else{
                textToSpeechButton.isEnabled = true
            }
        }
        else{
            Log.e("TTS", "Initialization Failed")
        }
    }

    private fun convertToSpeech(){
        val text = textInput.text.toString()
        textToSpeech?.speak(text, TextToSpeech.QUEUE_FLUSH, null, "") //converts the text into speech.
    }

    public override fun onDestroy(){      // To shutdown the  TextToSpeech engine
        if (textToSpeech == null){
            textToSpeech?.stop()
            textToSpeech?.shutdown()
        }
        super.onDestroy()
    }
}



xml file of tts

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/textInputLayout"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:layout_margin="12dp"
        app:boxCornerRadiusBottomEnd="8dp"
        app:boxCornerRadiusBottomStart="8dp"
        app:boxCornerRadiusTopEnd="8dp"
        app:boxCornerRadiusTopStart="8dp"
        app:boxStrokeColor="@color/purple_500"
        app:layout_constraintBottom_toTopOf="@+id/textToSpeechButton"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.5"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.25"
        app:layout_constraintVertical_chainStyle="packed">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/textInput"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:gravity="start"
            android:hint="Enter some text !" />


    </com.google.android.material.textfield.TextInputLayout>

    <com.google.android.material.button.MaterialButton
        style="@style/Widget.MaterialComponents.Button"
        android:id="@+id/textToSpeechButton"
        android:layout_width="match_parent"
        android:layout_height="62dp"
        android:layout_margin="12dp"
        android:layout_marginStart="12dp"
        android:layout_marginEnd="12dp"
        android:text="Convert to speech"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.5"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textInputLayout" />


</androidx.constraintlayout.widget.ConstraintLayout>